# EMQX 配置文件
# Fountain IoT Platform

# ==================== 节点配置 ====================
node {
  name = "iot-emqx@127.0.0.1"
  cookie = "emqx_iot_platform_secret_cookie"
  data_dir = "/opt/emqx/data"
}

# ==================== 日志配置 ====================
log {
  console_handler {
    enable = true
    level = warning
    formatter = text
  }
  
  file_handlers {
    default {
      enable = true
      level = info
      file = "/opt/emqx/log/emqx.log"
      rotation_count = 10
      rotation_size = 50MB
    }
  }
}

# ==================== MQTT 监听器 ====================
listeners.tcp.default {
  bind = "0.0.0.0:1883"
  max_connections = 1024000
  max_conn_rate = 1000
}

listeners.ssl.default {
  bind = "0.0.0.0:8883"
  max_connections = 512000
  ssl_options {
    cacertfile = "/opt/emqx/etc/certs/cacert.pem"
    certfile = "/opt/emqx/etc/certs/cert.pem"
    keyfile = "/opt/emqx/etc/certs/key.pem"
    verify = verify_none
  }
}

listeners.ws.default {
  bind = "0.0.0.0:8083"
  max_connections = 1024000
  websocket {
    mqtt_path = "/mqtt"
  }
}

listeners.wss.default {
  bind = "0.0.0.0:8084"
  max_connections = 512000
  websocket {
    mqtt_path = "/mqtt"
  }
  ssl_options {
    cacertfile = "/opt/emqx/etc/certs/cacert.pem"
    certfile = "/opt/emqx/etc/certs/cert.pem"
    keyfile = "/opt/emqx/etc/certs/key.pem"
  }
}

# ==================== MQTT 配置 ====================
mqtt {
  max_packet_size = 10MB
  max_clientid_len = 256
  max_topic_levels = 128
  max_qos_allowed = 2
  max_topic_alias = 65535
  retain_available = true
  wildcard_subscription = true
  shared_subscription = true
  ignore_loop_deliver = false
  strict_mode = false
  
  # 保持连接
  keepalive_multiplier = 1.5
  
  # 消息队列
  max_mqueue_len = 1000
  mqueue_store_qos0 = true
  
  # 消息过期
  max_awaiting_rel = 100
  await_rel_timeout = 300s
  
  # Session
  session_expiry_interval = 7200
  max_subscriptions = 10
  upgrade_qos = false
  max_inflight = 32
  retry_interval = 30s
}

# ==================== 区域设置 ====================
# zones 配置在 EMQX 5.x 中已移除，相关配置移至 mqtt 和 listeners 中

# ==================== 认证配置 ====================
# 注意：实际认证通过 HTTP Auth Plugin 对接 auth-service
authentication = [
  {
    enable = true
    backend = http
    mechanism = password_based
    method = post
    url = "http://auth-service:8001/api/v1/mqtt/auth"
    headers {
      "content-type" = "application/json"
    }
    body {
      clientid = "${clientid}"
      username = "${username}"
      password = "${password}"
    }
  }
]

# ==================== ACL 配置 ====================
authorization {
  deny_action = disconnect
  no_match = deny
  
  sources = [
    {
      enable = true
      type = http
      url = "http://auth-service:8001/api/v1/mqtt/acl"
      method = post
      headers {
        "content-type" = "application/json"
      }
      body {
        clientid = "${clientid}"
        username = "${username}"
        topic = "${topic}"
        action = "${action}"
      }
    }
  ]
}

# ==================== 规则引擎配置 ====================
# 注意：EMQX 5.x 规则引擎不支持静态配置文件
# 需要在 Phase 2 实现 protocol-gateway 后，通过 Dashboard 或 API 创建规则
# 
# 规则目标（待实现）：
# - 监听 topic: iot/+/+/telemetry, iot/+/+/event, iot/+/+/status
# - 转发到: http://protocol-gateway:8007/mqtt/ingest
# 
# 创建规则的 API 示例将在 Phase 2 文档中提供

# ==================== Dashboard 配置 ====================
dashboard {
  listeners.http {
    bind = "0.0.0.0:18083"
  }
  
  default_username = "admin"
  default_password = "public2025"
}

# ==================== API 配置 ====================
api {
  listeners.http {
    bind = "0.0.0.0:8081"
  }
}

# ==================== 系统配置 ====================
sys_topics {
  sys_msg_interval = 60s
  sys_heartbeat_interval = 30s
}

# ==================== 性能优化 ====================
# 线程池配置
scheduler {
  max_online = 1024000
}

# 内存管理
force_gc {
  count = 16000
  bytes = 16MB
}

# 内存警告
sysmon {
  vm {
    process_check_interval = 30s
    process_high_watermark = 80%
    process_low_watermark = 60%
    
    long_gc = 0
    long_schedule = 240ms
    large_heap = 32MB
    busy_dist_port = true
    busy_port = true
  }
  
  os {
    cpu_check_interval = 60s
    cpu_high_watermark = 80%
    cpu_low_watermark = 60%
    
    mem_check_interval = 60s
    procmem_high_watermark = 5%
    sysmem_high_watermark = 70%
  }
}

# ==================== 监控指标 ====================
prometheus {
  push_gateway_server = "http://prometheus:9091"
  interval = 15s
}

# ==================== 插件 ====================
plugins {
  install_dir = "/opt/emqx/plugins"
  # EMQX 5.x 中 auto_load 和 states_dir 已废弃
}

